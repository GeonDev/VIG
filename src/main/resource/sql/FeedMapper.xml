<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FeedMapper"> 	
 	
	<resultMap id="FeedSelectMap" type="feed">
		<result property="feedId" 				column="feed_id" 				jdbcType="NUMERIC"/>
		<result property="feedTitle"			column="feed_title" 			jdbcType="VARCHAR" />
		<result property="feedExplanation" 		column="feed_explanation" 		jdbcType="VARCHAR" />
		<result property="feedRegDate" 			column="feed_reg_date" 			jdbcType="DATE" />
		<result property="feedEditDate" 		column="feed_edit_date" 		jdbcType="DATE" />
		<result property="feedViewCount" 		column="feed_view_count" 		jdbcType="NUMERIC" />
		<result property="feedIsPrime" 			column="feed_is_prime" 			jdbcType="NUMERIC" />		
		<result property="feedUseGears" 		column="feed_use_gears" 		jdbcType="VARCHAR" />
		<result property="feedState" 			column="feed_state" 			jdbcType="NUMERIC" />
		<result property="primeFeedViewCount" 	column="prime_feed_view_count" 	jdbcType="NUMERIC" />
		<result property="commentRange" 		column="comment_range" 			jdbcType="NUMERIC" />					
		
		<association property="writer"         column="user_code"    javaType="user"      select="setWriter"/>		
		<association property="feedCategory"   column="category_id"  javaType="category"  select="setCategory"/>		
			
		<collection property="images" 		column="feed_id" 	javaType="list" 	ofType="image" 		select="setFeedImages"/>
		<collection property="likes" 		column="feed_id" 	javaType="list" 	ofType="joiner" 	select="setLikeUserlist"/>
		<collection property="coworkers" 	column="feed_id" 	javaType="list" 	ofType="joiner" 	select="setCoworkUserlist"/>
		<collection property="comments" 	column="feed_id" 	javaType="list" 	ofType="comment"	select="setCommentlist"/>	
			
	</resultMap>		
	
		<select id="setWriter" parameterType="string" resultMap="UserMapper.userSelectMap" >
			SELECT * FROM users
			WHERE user_code = #{value}		
		</select>	
		
		<select id="setFeedImages" parameterType="int" resultMap="ImageMapper.ImageSelectMap" >
			SELECT * FROM images
			WHERE feed_id = #{value}		
		</select>
		
		<select id="setLikeUserlist" parameterType="int" resultMap="JoinerMapper.joinerSelectMap" >
			SELECT * FROM joiner
			WHERE feed_id = #{value} AND is_like = 1					
		</select>
		
		<select id="setCoworkUserlist" parameterType="int" resultMap="JoinerMapper.joinerSelectMap" >
			SELECT * FROM joiner
			WHERE feed_id = #{value} AND is_like = 0					
		</select>
		
		<select id="setCommentlist" parameterType="int" resultMap="CommentMapper.commentSelectMap" >
			SELECT * FROM comments
			WHERE feed_id = #{value}					
		</select>
		
		<select id="setCategory"  parameterType="int"  resultMap="CategoryMapper.categorySelectMap" >
			SELECT * FROM categories
			WHERE category_id = #{value}					
		</select>
		
		
		<!-- 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 -->
		
		<select id = "getlastFeedId" resultType="int">
			SELECT MAX(feed_id) FROM feeds
		</select>		
		
		<insert id ="insertFeed" parameterType="feed">
			Insert INTO feeds(feed_id, user_code feed_title, feed_explanation, feed_reg_date, feed_is_prime, category, feed_use_gears, feed_state, comment_range  )
			VALUES(feed_id, #{writer.userCode}, #{feedTitle}, #{feedExplanation:VARCHAR}, NOW(), #{feedIsPrime:NUMERIC}, #{category:VARCHAR}, #{feedUseGears:VARCHAR}, #{feedState:NUMERIC}, #{commentRange:NUMERIC})		
		</insert>
		
		<select id="getFeed" parameterType="int" resultMap="FeedSelectMap">
			SELECT * FROM feeds
			WHERE feed_id = #{value}
		</select>		
		
		
		<!-- 특정유저가 작성한 피드를 불러온다. searchType이 1이면 최신순 피드 1페이지만 -->
		<select id="getMyFeedList" parameterType="search" resultMap="FeedSelectMap">
			SELECT * FROM
			(SELECT ROW_NUMBER() OVER(ORDER BY feeds.feed_id) num, feeds.* FROM feeds
			WHERE user_code = #{value} AND feed_state = 0	
			<if test="searchType == 0">
			ORDER BY feeds.feed_id DESC	
			</if>
			)temp WHERE num BETWEEN #{startRowNum} AND #{endRowNum}
		</select>
		
		
		<!-- 우선노출시 출력한 프라임 피드를 불러온다. (노출이 가장 작은 프라임피드 -->
		
		<select id ="getPrimeFeedOne" parameterType="search" resultMap="FeedSelectMap">
			SELECT feeds.* FROM feeds, images, keywords
			WHERE feed_is_prime = 1 AND feed_state = 0
			AND feeds.feed_id = images.feed_id
			AND images.is_thumbnail = 1
			AND images.image_id = keywords.image_id
			<if test="keyword !=''">
			AND keywords.keyword_en LIKE CONCAT('%',#{keyword},'%')				
			</if>
			GROUP BY feeds.feed_id
			ORDER BY feeds.prime_feed_view_count
			limit 1 	
		</select>
		
		
		
		<!-- 이벤트 참여 피드 조회용 -->
		<select id ="getFeedListOnlyTag" parameterType="string" resultMap="FeedSelectMap">
			SELECT feeds.* FROM feeds, images, keywords
			WHERE feeds.feed_id = images.feed_id
			AND images.image_id = keywords.image_id
			AND feed_state = 0
			AND keywords.keyword_origin = #{value}
			GROUP BY feeds.feed_id			
		</select>
		
		
		<select id="getTempFeed" parameterType="string" resultMap="FeedSelectMap">
			SELECT * FROM feeds
			WHERE user_code = #{value} AND feed_state = 1
		</select>
		
		<delete id="deleteFeed" parameterType="int">
		 	DELETE FROM feeds
		 	WHERE feed_id = #{value}
		</delete>
						
		<select id="getfeedListFromCategory" parameterType="search" resultMap="FeedSelectMap">
			SELECT *  FROM
			(SELECT ROW_NUMBER() OVER(ORDER BY feeds.feed_id) num, feeds.* FROM feeds, categories
			WHERE feeds.category_id = categories.category_id 
			AND feeds.feed_state = 0
			<if test="keyword !=''">
				AND categories.category_name = #{keyword}
			</if>			
			) temp
			WHERE num BETWEEN #{startRowNum} AND #{endRowNum}		
		</select>
		
		
		<select id="getfeedListFromKeyword" parameterType="search" resultMap="FeedSelectMap">
			SELECT *  FROM
			(SELECT ROW_NUMBER() OVER(ORDER BY feeds.feed_id) num, feeds.* FROM feeds, images, keywords
			WHERE feeds.feed_id = images.feed_id
			AND images.image_id = keywords.image_id
			AND images.is_thumbnail = 1
			AND feeds.feed_state = 0
			<if test="keyword !=''">
			AND keywords.keyword_en LIKE CONCAT('%',#{keyword},'%')
			OR feeds.feed_title LIKE CONCAT('%',#{keyword},'%')			
			</if>			
			GROUP BY feeds.feed_id) temp
			WHERE num BETWEEN #{startRowNum} AND #{endRowNum}		
		</select>	
		
		
		<select id="getfeedListFromColor" parameterType="search" resultMap="FeedSelectMap">
			SELECT *  FROM
			(SELECT ROW_NUMBER() OVER(ORDER BY feeds.feed_id) num, feeds.* FROM feeds, images,colors
			WHERE feeds.feed_id = images.feed_id 
			AND images.image_id = colors.image_id
			AND images.is_thumbnail = 1
			AND feeds.feed_state = 0
			AND colors.color_r BETWEEN #{startRed} AND #{endRed} 
			AND colors.color_g BETWEEN #{startGreen} AND #{endGreen} 
			AND colors.color_b BETWEEN #{startBlue} AND #{endBlue}
			GROUP BY feeds.feed_id) temp
			WHERE num BETWEEN #{startRowNum} AND #{endRowNum}		
		</select>	
		
		
		<!-- 자동완성용 쿼리문 -->
		<select id ="getfeedTitleList" parameterType="String" resultType="String">
			SELECT temp.feed_title FROM
			(SELECT ROW_NUMBER() OVER(ORDER BY feeds.feed_id) num, feed_title FROM feeds
			WHERE feed_title LIKE CONCAT('%',#{value},'%'))temp
			WHERE num BETWEEN 1 AND 5
		</select>
		
		<update id ="updatePrimeFeedViewCount" parameterType="feed">
		 UPDATE feeds
		 SET prime_feed_view_count = #{primeFeedViewCount}
		 WHERE feed_id = #{feedId} 		
		</update>
		
	 
</mapper>


